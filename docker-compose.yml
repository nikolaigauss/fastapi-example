## Docker compose file for local dev environment

version: "3.8"
   
services:
    # API Backend using Python fastapi
    fastapi1:
        build: app/.
        container_name: fastapi1
        command: uvicorn app.main:app --host 0.0.0.0 --port 5001
        volumes:
            - ./app:/usr/src/app/
        ports:
            - "5001:5001"
        depends_on:
            - redis
            - postgres
        environment:
          - REDIS_HOST=host.docker.internal
          - REDIS_PORT=6379
    fastapi2:
        build: app/.
        container_name: fastapi2
        command: uvicorn app.main:app --host 0.0.0.0 --port 5002
        volumes:
            - ./app:/usr/src/app/
        ports:
            - "5002:5002"
        depends_on:
            - redis
            - postgres
        environment:
          - REDIS_HOST=host.docker.internal
          - REDIS_PORT=6379
          - DB_HOST=host.docker.internal
          - DB_NAME=postgres
          - DB_USER=postgres
          - DB_PASSWORD=postgres
    nginx:
      build: nginx-proxy/. 
      restart: always
      ports:
      - "8083:80"
      depends_on:
        - fastapi1
        - fastapi2

     # Local Redis instance
    redis:
        image: "redis:alpine"
        restart: always
        ports:
            - "6379:6379"
    # Postgres database using docker volumes
    db:
        image: postgres:14.1-alpine
        restart: always
        environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=postgres
        ports:
          - '5432:5432'
        volumes: 
          - db:/var/lib/postgresql/data
# Relevant docker volumes to ensure persistence
volumes:
  db:
    driver: local